// Generated by CoffeeScript 1.6.2
(function() {
  var Browser, EventEmitter, debug,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  debug = require('debug')('fantomo:lib:bot');

  Browser = require('./browser').Browser;

  EventEmitter = require('events').EventEmitter;

  module.exports.Bot = (function(_super) {
    __extends(Bot, _super);

    function Bot(options) {
      var _base, _base1, _ref, _ref1,
        _this = this;

      this.options = options != null ? options : {};
      if ((_ref = (_base = this.options).browser) == null) {
        _base.browser = {};
      }
      if ((_ref1 = (_base1 = this.options).verbose) == null) {
        _base1.verbose = false;
      }
      debug('init');
      if (this.init != null) {
        this.init(this.options);
      }
      this.browser = new Browser(this.options.browser);
      this.browser.on('ready', function() {
        debug('ready');
        _this.emit('ready');
        if (_this.options.url != null) {
          return _this.browser.open(_this.options.url);
        }
      });
      this.browser.on('open', function() {
        var args;

        args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
        if (_this.on_open != null) {
          return _this.on_open.apply(_this, args);
        }
      });
      this.open = this.browser.open;
    }

    return Bot;

  })(EventEmitter);

}).call(this);
